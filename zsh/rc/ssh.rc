# -*- shell-script -*-x
# vim: set syntax=zsh:

ssh_key_manage() {
    if [[ -x `which keychain` ]] && [ -r ~/.ssh/id_?sa ] ; then
	# run keychain
	keychain --nogui ~/.ssh/id_?sa
	[[ -r ~/.ssh-agent-`hostname` ]] && . ~/.ssh-agent-`hostname`
	[[ -r ~/.keychain/`hostname`-sh ]] &&  source ~/.keychain/`hostname`-sh
	[[ -r ~/.gpg-agent-info ]] &&  source ~/.gpg-agent-info
        # if [ -f "${HOME}/.gpg-agent-info" ]; then
        #     . "${HOME}/.gpg-agent-info"
        #     export GPG_AGENT_INFO
        #     export SSH_AUTH_SOCK
        #     export SSH_AGENT_PID
        # fi
    else
	if [ -x $(which ssh-agent) -a -f $HOME/.ssh/id_?sa ]; then
	    if [[ -r $HOME/.ssh/agent-pid ]] ; then
		ps -p $(< $HOME/.ssh/agent-pid) 1>/dev/null
		if [[ $? == 0 || -d /proc/$(< $HOME/.ssh/agent-pid) ]]; then
		    source $HOME/.ssh/agent
		else
		    ssh-agent -s > $HOME/.ssh/agent
		    source $HOME/.ssh/agent
		    echo $SSH_AGENT_PID > $HOME/.ssh/agent-pid
		    ssh-add $HOME/.ssh/id_?sa
		fi
	    else
		ssh-agent -s > $HOME/.ssh/agent
		source $HOME/.ssh/agent
		echo $SSH_AGENT_PID > $HOME/.ssh/agent-pid
		ssh-add $HOME/.ssh/id_?sa
	    fi
	fi
    fi
}

# ssh key management
if [[ "$USER" != "root" ]]; then
    ssh_key_manage
fi
return 0
