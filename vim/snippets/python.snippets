snippet #!
	#!/usr/bin/env python
snippet from
	from ${1:sys} import ${2:*}
snippet imp
	import ${1:module}
# Module Docstring
snippet docs
	'''
	File: ${1:`Filename('$1.py', 'foo.py')`}
	Author: ${2:`g:snips_author`}
	Description: ${3}
	'''
snippet while
	while ${1:True}:
		${2:pass}
snippet for
	for ${1:x} in ${2:xs}:
		${3:pass}
snippet fore
	for ${1:n}, ${2:item} in enumerate(${3:items}):
		${4:pass}
snippet class
	class ${1:ClassName}(${2:object}):
		"""${3:docstring for $1}"""
		def __init__(self, ${4:arg}):
			${5:super($1, self).__init__()}
			self.$4 = $4
			${6}
snippet def
	def ${1:function}(${2}):
		${3:pass}
snippet defs
	def ${1:method}(self${2}):
		${3:pass}
snippet prop
	@property
	def ${1:method}(self${2}):
		${3:pass}
snippet lam
	lambda ${1:args}: ${2:action}
snippet .
	self.
snippet try Try/Except
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
snippet try Try/Except/Else
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
snippet try Try/Except/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${5:pass}
snippet try Try/Except/Else/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${6:pass}
snippet ifmain
	if __name__ == '__main__':
		${1:main()}
# __magic__
snippet _
	__${1:init}__${2}
snippet ***
	*args, **kwargs
snippet af
	assert False, repr(${1})$2
snippet pdbt
	import pdb; pdb.set_trace()
snippet pp
	from pprint import pprint; pprint($1)$2
