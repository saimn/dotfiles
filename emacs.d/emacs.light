;;; -*- Mode: Emacs-Lisp -*-
;;; .emacs - Emacs configuration file
;;; Time-stamp: <2010-09-07 11:28:56 sconseil>

(set-language-environment 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)

; Emacs Load Path
(add-to-list 'load-path "~/.emacs.d")

;; backup directory
(setq backup-directory-alist '(("." . "~/.emacs.d/backup-files/")))

;; Customize file
(setq custom-file (expand-file-name "~/.emacs.d/customize.el"))
(load custom-file)

; Traite 'y' ou <CR> comme yes, 'n' comme no.
;(fset 'yes-or-no-p 'y-or-n-p)
(defalias 'yes-or-no-p 'y-or-n-p)
(define-key query-replace-map [return] 'act)
(define-key query-replace-map [?\C-m] 'act)

; Don't show startup buffer
(setq inhibit-startup-message t)

; Molette de la souris
(defun up-slightly () (interactive) (scroll-up 5))
(defun down-slightly () (interactive) (scroll-down 5))
(global-set-key [mouse-4] 'down-slightly)
(global-set-key [mouse-5] 'up-slightly)
(defun up-one () (interactive) (scroll-up 1))
(defun down-one () (interactive) (scroll-down 1))
(global-set-key [S-mouse-4] 'down-one)
(global-set-key [S-mouse-5] 'up-one)
(defun up-a-lot () (interactive) (scroll-up))
(defun down-a-lot () (interactive) (scroll-down))
(global-set-key [C-mouse-4] 'down-a-lot)
(global-set-key [C-mouse-5] 'up-a-lot)
;(setq scroll-step 1)

; ----------------------------------------------------------------------
; Load modules / modes
; ----------------------------------------------------------------------

;; display time and load
(display-time-mode)

;; show completion as you type
(icomplete-mode)

;; Show all buffer names when you switch buffers with C-x b
(iswitchb-mode)

; ----------------------------------------------------------------------
; Edit
; ----------------------------------------------------------------------

;; Mode auto-fill
(setq-default fill-column 78)
;(setq longlines-wrap-follows-window-size t)

; turn on paren match highlighting
(show-paren-mode 1)
; Text selection highlighting (t by default on Emacs 23)
(transient-mark-mode t)
; delete seleted text when typing
(delete-selection-mode 1)

; Activer la coloration syntaxique
(global-font-lock-mode t)
; Mettre un maximum de couleurs
(setq font-lock-maximum-size nil)

; default indent: 2 spaces
(setq c-basic-offset 2)

;; Customize Whitespace mode
; make whitespace-mode use just basic coloring
(setq whitespace-style (quote
  ( tabs spaces trailing lines-tail newline )))
; Supprime tous les espaces en fin de ligne
(add-hook 'before-save-hook 'delete-trailing-whitespace)

; en Americain, les phrases (sentences) se terminent par deux espaces
; ce comportement n'est pas souhaitable en francais
(setq sentence-end-double-space nil)

; Eviter que la cesure de fin de ligne, oper√©e par exemple par le
; mode autofill ou par un M-q, coupe au niveau d'un caractere ( ou :
(add-hook 'fill-no-break-predicate 'fill-french-nobreak-p)

; No truncate line
;(setq truncate-partial-width-windows nil)

; ----------------------------------------------------------------------
; Useful functions
; ----------------------------------------------------------------------
(require 'init-functions)

; ----------------------------------------------------------------------
; IDL - IDLwave
; ----------------------------------------------------------------------
(require 'init-idlwave)

;----------------------------------------------------------------------
; Keyboard shortcuts
; ----------------------------------------------------------------------

(global-set-key (kbd "<C-escape>") 'list-buffers)
(global-set-key (kbd "C-/") 'my-comment-region-or-line)
(global-set-key (kbd "C-\\") 'my-uncomment-region-or-line)
;(global-set-key (kbd "C-j") 'fill-paragraph)

(global-set-key (kbd "C-z") 'undo)

(global-set-key (kbd "<C-tab>") 'other-window)
(global-set-key (kbd "<C-S-tab>") '(lambda () (interactive) (other-window -1)))
(global-set-key (kbd "<C-S-iso-lefttab>") '(lambda () (interactive) (other-window -1)))

;; Meta
;(global-set-key (kbd "M-C-h") 'backward-kill-word)
;(global-set-key (kbd "M-C-r") 'query-replace)
(global-set-key (kbd "M-r") 'replace-string)
(global-set-key (kbd "M-g") 'goto-line)
(global-set-key (kbd "M-h") 'help-command)

(global-set-key (kbd "<f1>") 'man) ; 'manual-entry
(global-set-key (kbd "<f2>") 'save-buffer)
(global-set-key (kbd "<f3>") 'flyspell-buffer)
(global-set-key (kbd "<f4>") 'kill-this-buffer)

(global-set-key (kbd "<f5>") 'eval-current-buffer)
(global-set-key (kbd "<f6>") 'buffer-menu)
(global-set-key (kbd "<f7>") 'other-window)
;(global-set-key (kbd "<f8>") 'dired)
(global-set-key [f8]         'query-replace)
(global-set-key [(shift f8)] 'query-replace-regexp)

(global-set-key (kbd "<f9>") 'compile)
(global-set-key (kbd "<f10>") 'my-toggle-menu-and-scrollbar)
;(global-set-key [f10] 'repeat-complex-command)
(global-set-key (kbd "<f11>") 'toggle-truncate-lines)
(global-set-key (kbd "<f12>") 'grep)

(global-set-key (kbd "<C-f1>") 'compile)
(global-set-key (kbd "<C-f3>") 'next-error)
(global-set-key (kbd "<C-f4>") 'previous-error)
(global-set-key (kbd "<C-f9>") 'recompile)
(global-set-key (kbd "<C-f10>") 'kill-compilation)
